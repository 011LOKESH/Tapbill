cd Tapbill
cd backend
npm install
npm install exceljs
npm start


cd Tapbill
cd frontend
npm install
npm install axios
npm install xlsx @types/xlsx
npm run dev

cd Tapbill
cd backend
node seedMenuData.js

npm install react-router-dom

cd Tapbill
git init
git add .
git commit -m "message"
git push --force origin main

git remote add origin https://github.com/011LOKESH/Tapbill.git
git branch -M main
git push -u origin main

🎯 What Clients Need to Install

Required Software:
    Node.js (v18 or higher) - Download here
    MongoDB (v6.0 or higher) - Download here

That's it! No other software needed because:
✅ Electron is bundled with the app
✅ All dependencies installed via npm
✅ Frontend and backend included
✅ Database runs locally
🚀 Super Easy Setup for Clients (Windows)

I've created automated setup scripts for you:
    Method 1: One-Click Setup (Recommended)
    Download/clone your repository
    Double-click setup.bat → Installs everything automatically
    Double-click Start-TapBill.bat → Starts the app
    Method 2: Manual Setup
git clone <your-repo-url>
cd TapBill
npm install
cd backend && npm install && cd ..
cd frontend && npm install && cd ..
npm run build
npm start

📦 What to Upload to Git

✅ Include:
All source code files
package.json files
.env.example (template)
setup.bat and Start-TapBill.bat
Documentation files
Configuration files

❌ Exclude (already in .gitignore):
node_modules/ folders
.env files (contain secrets)
dist/ and build/ folders
Temporary files

🔧 Files I Created for Easy Deployment:
setup.bat - Automatic Windows setup script
Start-TapBill.bat - Enhanced startup script with MongoDB check
.env.example - Environment template for clients
DEPLOYMENT.md - Detailed deployment guide
README.md - Updated with clear instructions
GIT_UPLOAD_CHECKLIST.md - Checklist for you before uploading

🎯 Client Deployment Process:
Client downloads your repository
Installs Node.js and MongoDB (one-time setup)
Runs setup.bat (installs all dependencies)
Runs Start-TapBill.bat (starts the app)
Logs in with admin/admin123
Ready to use!
💾 Data Persistence:
✅ MongoDB database stores all data permanently
✅ Automatic backup to JSON files in data/ folder
✅ Data survives app restarts and computer reboots
✅ No cloud dependency - works completely offline

🔍 Before Uploading to Git:
Test the setup process on a fresh machine
Verify .gitignore excludes sensitive files
Update repository URL in documentation
Test that clients can clone and run successfully
🎉 Benefits of This Setup:
✅ No complex installation - just Node.js + MongoDB
✅ Automated setup scripts for non-technical users
✅ Complete offline functionality
✅ Professional deployment with proper documentation
✅ Cross-platform compatibility (Windows/Mac/Linux)
✅ Persistent data storage with MongoDB